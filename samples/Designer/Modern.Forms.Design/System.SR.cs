// <auto-generated>
using System.Reflection;


namespace System
{
    internal static partial class SR
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(SR)));
        internal static global::System.Globalization.CultureInfo Culture { get; set; }
#if !NET20
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
#endif
        internal static string GetResourceString(string resourceKey, string defaultValue = null) =>  ResourceManager.GetString(resourceKey, Culture);
        /// <summary>Winforms Designer is not supported on this platform.</summary>
        internal static string @PlatformNotSupported_WinformsDesigner => GetResourceString("PlatformNotSupported_WinformsDesigner");
        /// <summary>Layout Settings</summary>
        internal static string @DesignerOptions_LayoutSettings => GetResourceString("DesignerOptions_LayoutSettings");
        /// <summary>Object Bound Smart Tag Settings</summary>
        internal static string @DesignerOptions_ObjectBoundSmartTagSettings => GetResourceString("DesignerOptions_ObjectBoundSmartTagSettings");
        /// <summary>Default Grid Cell Size</summary>
        internal static string @DesignerOptions_GridSizeDisplayName => GetResourceString("DesignerOptions_GridSizeDisplayName");
        /// <summary>Show Grid</summary>
        internal static string @DesignerOptions_ShowGridDisplayName => GetResourceString("DesignerOptions_ShowGridDisplayName");
        /// <summary>Snap to Grid</summary>
        internal static string @DesignerOptions_SnapToGridDisplayName => GetResourceString("DesignerOptions_SnapToGridDisplayName");
        /// <summary>Controls whether designers should use snap lines.  If true, snap lines will be used as guides.  If false, grid lines will be used.</summary>
        internal static string @DesignerOptions_UseSnapLines => GetResourceString("DesignerOptions_UseSnapLines");
        /// <summary>Controls whether designers should show smart tag popup windows.</summary>
        internal static string @DesignerOptions_UseSmartTags => GetResourceString("DesignerOptions_UseSmartTags");
        /// <summary>Controls whether designer smart tag windows should be shown by default.</summary>
        internal static string @DesignerOptions_ObjectBoundSmartTagAutoShow => GetResourceString("DesignerOptions_ObjectBoundSmartTagAutoShow");
        /// <summary>Automatically Open Smart Tags</summary>
        internal static string @DesignerOptions_ObjectBoundSmartTagAutoShowDisplayName => GetResourceString("DesignerOptions_ObjectBoundSmartTagAutoShowDisplayName");
        /// <summary>Code Generation Settings</summary>
        internal static string @DesignerOptions_CodeGenSettings => GetResourceString("DesignerOptions_CodeGenSettings");
        /// <summary>Enabled optimized code generation.  Some controls may not be compatible with this mode.  For this change to take effect, Visual Studio must be closed and re-opened.</summary>
        internal static string @DesignerOptions_OptimizedCodeGen => GetResourceString("DesignerOptions_OptimizedCodeGen");
        /// <summary>Optimized Code Generation</summary>
        internal static string @DesignerOptions_CodeGenDisplay => GetResourceString("DesignerOptions_CodeGenDisplay");
        /// <summary>Enable InSitu Editing</summary>
        internal static string @DesignerOptions_EnableInSituEditingDisplay => GetResourceString("DesignerOptions_EnableInSituEditingDisplay");
        /// <summary>InSitu Editing</summary>
        internal static string @DesignerOptions_EnableInSituEditingCat => GetResourceString("DesignerOptions_EnableInSituEditingCat");
        /// <summary>Controls whether designers should display a sizing grid when LayoutMode = SnapToGrid.</summary>
        internal static string @DesignerOptions_ShowGridDesc => GetResourceString("DesignerOptions_ShowGridDesc");
        /// <summary>Sets the default X and Y grid setting on designers when LayoutMode  = SnapToGrid.</summary>
        internal static string @DesignerOptions_GridSizeDesc => GetResourceString("DesignerOptions_GridSizeDesc");
        /// <summary>Controls whether designers should snap to grid dots when LayoutMode = SnapToGrid.</summary>
        internal static string @DesignerOptions_SnapToGridDesc => GetResourceString("DesignerOptions_SnapToGridDesc");
        /// <summary>(None)</summary>
        internal static string @None => GetResourceString("None");
        /// <summary>(none)</summary>
        internal static string @None_lc => GetResourceString("None_lc");
        /// <summary>This method/object is not implemented by design.</summary>
        internal static string @NotImplementedByDesign => GetResourceString("NotImplementedByDesign");
        /// <summary>Controls whether InSitu editing is enabled.</summary>
        internal static string @DesignerOptions_EnableInSituEditingDesc => GetResourceString("DesignerOptions_EnableInSituEditingDesc");
        /// <summary>This IDataObject doesn't support SetData.</summary>
        internal static string @DragDropSetDataError => GetResourceString("DragDropSetDataError");
        /// <summary>Adding event '{0}'</summary>
        internal static string @ComponentDesignerAddEvent => GetResourceString("ComponentDesignerAddEvent");
        /// <summary>Read-Only</summary>
        internal static string @InheritanceServiceReadOnlyCollection => GetResourceString("InheritanceServiceReadOnlyCollection");
        /// <summary>Unhandled VT: {0}.</summary>
        internal static string @COM2UnhandledVT => GetResourceString("COM2UnhandledVT");
        /// <summary>.NET Component</summary>
        internal static string @DotNET_ComponentType => GetResourceString("DotNET_ComponentType");
        /// <summary>Argument should be a non-empty string.</summary>
        internal static string @ToolboxItemInvalidKey => GetResourceString("ToolboxItemInvalidKey");
        /// <summary>Property {0} requires an argument of type {1}.</summary>
        internal static string @ToolboxItemInvalidPropertyType => GetResourceString("ToolboxItemInvalidPropertyType");
        /// <summary>Toolbox item cannot be modified.</summary>
        internal static string @ToolboxItemLocked => GetResourceString("ToolboxItemLocked");
        /// <summary>Data type {0} is not serializable. Items added to a property dictionary must be serializable.</summary>
        internal static string @ToolboxItemValueNotSerializable => GetResourceString("ToolboxItemValueNotSerializable");
        /// <summary>Not implemented.</summary>
        internal static string @UnsafeNativeMethodsNotImplemented => GetResourceString("UnsafeNativeMethodsNotImplemented");
        /// <summary>Could not find method '{0}'.</summary>
        internal static string @DesignerActionPanel_CouldNotFindMethod => GetResourceString("DesignerActionPanel_CouldNotFindMethod");
        /// <summary>Format {0} components (alignment)</summary>
        internal static string @CommandSetAlignByPrimary => GetResourceString("CommandSetAlignByPrimary");
        /// <summary>Align {0} components to grid</summary>
        internal static string @CommandSetAlignToGrid => GetResourceString("CommandSetAlignToGrid");
        /// <summary>Cut {0} Components</summary>
        internal static string @CommandSetCutMultiple => GetResourceString("CommandSetCutMultiple");
        /// <summary>Delete {0} components</summary>
        internal static string @CommandSetDelete => GetResourceString("CommandSetDelete");
        /// <summary>An error occurred while processing this command.
        ///       {0}</summary>
        internal static string @CommandSetError => GetResourceString("CommandSetError");
        /// <summary>Format {0} components (spacing)</summary>
        internal static string @CommandSetFormatSpacing => GetResourceString("CommandSetFormatSpacing");
        /// <summary>Paste components</summary>
        internal static string @CommandSetPaste => GetResourceString("CommandSetPaste");
        /// <summary>Size {0} components</summary>
        internal static string @CommandSetSize => GetResourceString("CommandSetSize");
        /// <summary>Size {0} components to grid</summary>
        internal static string @CommandSetSizeToGrid => GetResourceString("CommandSetSizeToGrid");
        /// <summary>Unknown spacing command</summary>
        internal static string @CommandSetUnknownSpacingCommand => GetResourceString("CommandSetUnknownSpacingCommand");
        /// <summary>Move {0}</summary>
        internal static string @DragDropMoveComponent => GetResourceString("DragDropMoveComponent");
        /// <summary>Move {0} components</summary>
        internal static string @DragDropMoveComponents => GetResourceString("DragDropMoveComponents");
        /// <summary>Horizontal center of {0} component(s)</summary>
        internal static string @WindowsFormsCommandCenterX => GetResourceString("WindowsFormsCommandCenterX");
        /// <summary>Vertical center of {0} component(s)</summary>
        internal static string @WindowsFormsCommandCenterY => GetResourceString("WindowsFormsCommandCenterY");
        /// <summary>Could not convert value '{0}' to the type '{1}'.</summary>
        internal static string @DesignerActionPanel_CouldNotConvertValue => GetResourceString("DesignerActionPanel_CouldNotConvertValue");
        /// <summary>Could not find property '{0}' on '{1}'.</summary>
        internal static string @DesignerActionPanel_CouldNotFindProperty => GetResourceString("DesignerActionPanel_CouldNotFindProperty");
        /// <summary>{0} Tasks</summary>
        internal static string @DesignerActionPanel_DefaultPanelTitle => GetResourceString("DesignerActionPanel_DefaultPanelTitle");
        /// <summary>Error using the dropdown: {0}</summary>
        internal static string @DesignerActionPanel_ErrorActivatingDropDown => GetResourceString("DesignerActionPanel_ErrorActivatingDropDown");
        /// <summary>Error invoking '{0}'.  Details: {1}</summary>
        internal static string @DesignerActionPanel_ErrorInvokingAction => GetResourceString("DesignerActionPanel_ErrorInvokingAction");
        /// <summary>Error setting value '{0}' to property '{1}'.  Details: {2}</summary>
        internal static string @DesignerActionPanel_ErrorSettingValue => GetResourceString("DesignerActionPanel_ErrorSettingValue");
        /// <summary>Inherited control</summary>
        internal static string @DesignerInherited => GetResourceString("DesignerInherited");
        /// <summary>Inherited control (Private)</summary>
        internal static string @DesignerInheritedReadOnly => GetResourceString("DesignerInheritedReadOnly");
        /// <summary>RTL_False</summary>
        internal static string @RTL => GetResourceString("RTL");
        /// <summary>Auto Arrange Tray Icons</summary>
        internal static string @TrayAutoArrange => GetResourceString("TrayAutoArrange");
        /// <summary>Line Up Tray Icons</summary>
        internal static string @TrayLineUpIcons => GetResourceString("TrayLineUpIcons");
        /// <summary>Show Large or Small Icons</summary>
        internal static string @TrayShowLargeIcons => GetResourceString("TrayShowLargeIcons");
        /// <summary>Error</summary>
        internal static string @UIServiceHelper_ErrorCaption => GetResourceString("UIServiceHelper_ErrorCaption");
        /// <summary>&lt;couldn't find resource string "WindowsFormsAddEvent"&gt;</summary>
        internal static string @WindowsFormsAddEvent => GetResourceString("WindowsFormsAddEvent");
        /// <summary>Copy and move {0}</summary>
        internal static string @BehaviorServiceCopyControl => GetResourceString("BehaviorServiceCopyControl");
        /// <summary>Copy and move {0} Controls</summary>
        internal static string @BehaviorServiceCopyControls => GetResourceString("BehaviorServiceCopyControls");
        /// <summary>Move {0}</summary>
        internal static string @BehaviorServiceMoveControl => GetResourceString("BehaviorServiceMoveControl");
        /// <summary>Move {0} Controls</summary>
        internal static string @BehaviorServiceMoveControls => GetResourceString("BehaviorServiceMoveControls");
        /// <summary>Call to BeginDrag must succeed before calling drag functions.</summary>
        internal static string @DesignerBeginDragNotCalled => GetResourceString("DesignerBeginDragNotCalled");
        /// <summary>Drag {0} components</summary>
        internal static string @DragDropDragComponents => GetResourceString("DragDropDragComponents");
        /// <summary>Size {0}</summary>
        internal static string @DragDropSizeComponent => GetResourceString("DragDropSizeComponent");
        /// <summary>Size {0} components</summary>
        internal static string @DragDropSizeComponents => GetResourceString("DragDropSizeComponents");
        /// <summary>Add Component</summary>
        internal static string @UndoEngineComponentAdd0 => GetResourceString("UndoEngineComponentAdd0");
        /// <summary>Add {0}</summary>
        internal static string @UndoEngineComponentAdd1 => GetResourceString("UndoEngineComponentAdd1");
        /// <summary>Change Component</summary>
        internal static string @UndoEngineComponentChange0 => GetResourceString("UndoEngineComponentChange0");
        /// <summary>Change {0}</summary>
        internal static string @UndoEngineComponentChange1 => GetResourceString("UndoEngineComponentChange1");
        /// <summary>Change {0}.{1}</summary>
        internal static string @UndoEngineComponentChange2 => GetResourceString("UndoEngineComponentChange2");
        /// <summary>Remove Component</summary>
        internal static string @UndoEngineComponentRemove0 => GetResourceString("UndoEngineComponentRemove0");
        /// <summary>Remove {0}</summary>
        internal static string @UndoEngineComponentRemove1 => GetResourceString("UndoEngineComponentRemove1");
        /// <summary>Rename {0} to {1}</summary>
        internal static string @UndoEngineComponentRename => GetResourceString("UndoEngineComponentRename");
        /// <summary>The service {0} is required but could not be found.  If you have removed this service ensure that you provide a replacement.</summary>
        internal static string @UndoEngineMissingService => GetResourceString("UndoEngineMissingService");
        /// <summary>Cannot remove or destroy inherited component '{0}'.</summary>
        internal static string @DesignerHostCantDestroyInheritedComponent => GetResourceString("DesignerHostCantDestroyInheritedComponent");
        /// <summary>Cannot add an instance of {0} to the designer because it would create a circular dependency.  Make sure that the type does not have the same namespace and type name as the root component {1}.</summary>
        internal static string @DesignerHostCyclicAdd => GetResourceString("DesignerHostCyclicAdd");
        /// <summary>Failure initializing the designer.  It has no Component member.</summary>
        internal static string @DesignerHostDesignerNeedsComponent => GetResourceString("DesignerHostDesignerNeedsComponent");
        /// <summary>Deleting '{0}'.</summary>
        internal static string @DesignerHostDestroyComponentTransaction => GetResourceString("DesignerHostDestroyComponentTransaction");
        /// <summary>The name {0} is already in use by another component.</summary>
        internal static string @DesignerHostDuplicateName => GetResourceString("DesignerHostDuplicateName");
        /// <summary>Component of type {0} could not be created.  Make sure the type implements IComponent and provides an appropriate public constructor.  Appropriate constructors either take no parameters or take a single IContainer parameter.</summary>
        internal static string @DesignerHostFailedComponentCreate => GetResourceString("DesignerHostFailedComponentCreate");
        /// <summary>No Description Available</summary>
        internal static string @DesignerHostGenericTransactionName => GetResourceString("DesignerHostGenericTransactionName");
        /// <summary>A designer loader has already been configured for this design surface.</summary>
        internal static string @DesignerHostLoaderSpecified => GetResourceString("DesignerHostLoaderSpecified");
        /// <summary>The designer transaction '{0}' cannot be committed or canceled because nested transaction '{1}' is still active.  Commit or cancel the nested transaction first.</summary>
        internal static string @DesignerHostNestedTransaction => GetResourceString("DesignerHostNestedTransaction");
        /// <summary>Cannot open a designer for the file because the class within it does not inherit from a class that can be visually designed.</summary>
        internal static string @DesignerHostNoBaseClass => GetResourceString("DesignerHostNoBaseClass");
        /// <summary>There is no designer for the class {0}.</summary>
        internal static string @DesignerHostNoTopLevelDesigner => GetResourceString("DesignerHostNoTopLevelDesigner");
        /// <summary>New components cannot be added while a designer is unloading.</summary>
        internal static string @DesignerHostUnloading => GetResourceString("DesignerHostUnloading");
        /// <summary>The container cannot be disposed at design time.</summary>
        internal static string @DesignSurfaceContainerDispose => GetResourceString("DesignSurfaceContainerDispose");
        /// <summary>Cannot create a view for this design surface because the designer is not loaded.</summary>
        internal static string @DesignSurfaceDesignerNotLoaded => GetResourceString("DesignSurfaceDesignerNotLoaded");
        /// <summary>An error occurred while loading the document.  Fix the error, and then try loading the document again. The error message follows:
        /// 
        ///       {0}</summary>
        internal static string @DesignSurfaceFatalError => GetResourceString("DesignSurfaceFatalError");
        /// <summary>The designer loader did not provide a root component but has not indicated why.</summary>
        internal static string @DesignSurfaceNoRootComponent => GetResourceString("DesignSurfaceNoRootComponent");
        /// <summary>The designer loaded, but it does not offer a view compatible with this design surface.</summary>
        internal static string @DesignSurfaceNoSupportedTechnology => GetResourceString("DesignSurfaceNoSupportedTechnology");
        /// <summary>The service {0} cannot be removed from the service container.</summary>
        internal static string @DesignSurfaceServiceIsFixed => GetResourceString("DesignSurfaceServiceIsFixed");
        /// <summary>The extender provider {0} has already been added as an extender.  Adding another would result in duplicate properties.</summary>
        internal static string @ExtenderProviderServiceDuplicateProvider => GetResourceString("ExtenderProviderServiceDuplicateProvider");
        /// <summary>Resize {0}</summary>
        internal static string @BehaviorServiceResizeControl => GetResourceString("BehaviorServiceResizeControl");
        /// <summary>Resize {0} Controls</summary>
        internal static string @BehaviorServiceResizeControls => GetResourceString("BehaviorServiceResizeControls");
        /// <summary>Dock in Parent Container</summary>
        internal static string @DesignerShortcutDockInParent => GetResourceString("DesignerShortcutDockInParent");
        /// <summary>Undock in Parent Container</summary>
        internal static string @DesignerShortcutUndockInParent => GetResourceString("DesignerShortcutUndockInParent");
        /// <summary>The control {0} has thrown an unhandled exception in the designer and has been disabled.
        /// 
        ///       Exception:
        ///       {1}
        /// 
        ///       Stack trace:{2}</summary>
        internal static string @ControlDesigner_WndProcException => GetResourceString("ControlDesigner_WndProcException");
        /// <summary>The Locked property determines if we can move or resize the control.</summary>
        internal static string @lockedDescr => GetResourceString("lockedDescr");
        /// <summary>'{1}' is not a valid value for '{0}'.</summary>
        internal static string @InvalidArgument => GetResourceString("InvalidArgument");
        /// <summary>'{1}' is not a valid value for '{0}'. '{0}' should be between {2} and {3}.</summary>
        internal static string @InvalidBoundArgument => GetResourceString("InvalidBoundArgument");
        /// <summary>The field '{0}' could not be found on the target object.  Make sure that the field is defined as an instance variable on the target object and has the correct scope.</summary>
        internal static string @SerializerFieldTargetEvalFailed => GetResourceString("SerializerFieldTargetEvalFailed");
        /// <summary>Array rank '{0}' is too high.  Visual Studio can only save and load arrays with a rank of 1.</summary>
        internal static string @SerializerInvalidArrayRank => GetResourceString("SerializerInvalidArrayRank");
        /// <summary>Code statements for the object '{0}' were lost during serialization.  This may have been a result of another object misbehaving during serialization.</summary>
        internal static string @SerializerLostStatements => GetResourceString("SerializerLostStatements");
        /// <summary>The source code contains a reference to the class definition, but the class definition cannot be found.</summary>
        internal static string @SerializerNoRootExpression => GetResourceString("SerializerNoRootExpression");
        /// <summary>The object '{0}' failed to serialize itself.  It may not support code generation.</summary>
        internal static string @SerializerNoSerializerForComponent => GetResourceString("SerializerNoSerializerForComponent");
        /// <summary>The type '{0}' has no event named '{1}'.</summary>
        internal static string @SerializerNoSuchEvent => GetResourceString("SerializerNoSuchEvent");
        /// <summary>The type '{0}' has no field named '{1}'.</summary>
        internal static string @SerializerNoSuchField => GetResourceString("SerializerNoSuchField");
        /// <summary>The type '{0}' has no property named '{1}'.</summary>
        internal static string @SerializerNoSuchProperty => GetResourceString("SerializerNoSuchProperty");
        /// <summary>The object '{0}' returned null for the property '{1}' but this is not allowed.</summary>
        internal static string @SerializerNullNestedProperty => GetResourceString("SerializerNullNestedProperty");
        /// <summary>Code generation for property '{0}' failed.  Error was: '{1}'</summary>
        internal static string @SerializerPropertyGenFailed => GetResourceString("SerializerPropertyGenFailed");
        /// <summary>Could not find type '{0}'.  Please make sure that the assembly that contains this type is referenced.  If this type is a part of your development project, make sure that the project has been successfully built using settings for your current platform or An ...</summary>
        internal static string @SerializerTypeNotFound => GetResourceString("SerializerTypeNotFound");
        /// <summary>The variable '{0}' is either undeclared or was never assigned.</summary>
        internal static string @SerializerUndeclaredName => GetResourceString("SerializerUndeclaredName");
        /// <summary>&amp;About...</summary>
        internal static string @StandardMenuAbout => GetResourceString("StandardMenuAbout");
        /// <summary>&amp;Contents</summary>
        internal static string @StandardMenuContents => GetResourceString("StandardMenuContents");
        /// <summary>&amp;Copy</summary>
        internal static string @StandardMenuCopy => GetResourceString("StandardMenuCopy");
        /// <summary>Create Standard Menu</summary>
        internal static string @StandardMenuCreateDesc => GetResourceString("StandardMenuCreateDesc");
        /// <summary>&amp;Customize</summary>
        internal static string @StandardMenuCustomize => GetResourceString("StandardMenuCustomize");
        /// <summary>Cu&amp;t</summary>
        internal static string @StandardMenuCut => GetResourceString("StandardMenuCut");
        /// <summary>&amp;Edit</summary>
        internal static string @StandardMenuEdit => GetResourceString("StandardMenuEdit");
        /// <summary>E&amp;xit</summary>
        internal static string @StandardMenuExit => GetResourceString("StandardMenuExit");
        /// <summary>&amp;File</summary>
        internal static string @StandardMenuFile => GetResourceString("StandardMenuFile");
        /// <summary>&amp;Help</summary>
        internal static string @StandardMenuHelp => GetResourceString("StandardMenuHelp");
        /// <summary>&amp;Index</summary>
        internal static string @StandardMenuIndex => GetResourceString("StandardMenuIndex");
        /// <summary>&amp;New</summary>
        internal static string @StandardMenuNew => GetResourceString("StandardMenuNew");
        /// <summary>&amp;Open</summary>
        internal static string @StandardMenuOpen => GetResourceString("StandardMenuOpen");
        /// <summary>&amp;Options</summary>
        internal static string @StandardMenuOptions => GetResourceString("StandardMenuOptions");
        /// <summary>&amp;Paste</summary>
        internal static string @StandardMenuPaste => GetResourceString("StandardMenuPaste");
        /// <summary>&amp;Print</summary>
        internal static string @StandardMenuPrint => GetResourceString("StandardMenuPrint");
        /// <summary>Print Pre&amp;view</summary>
        internal static string @StandardMenuPrintPreview => GetResourceString("StandardMenuPrintPreview");
        /// <summary>&amp;Redo</summary>
        internal static string @StandardMenuRedo => GetResourceString("StandardMenuRedo");
        /// <summary>&amp;Save</summary>
        internal static string @StandardMenuSave => GetResourceString("StandardMenuSave");
        /// <summary>Save &amp;As</summary>
        internal static string @StandardMenuSaveAs => GetResourceString("StandardMenuSaveAs");
        /// <summary>&amp;Search</summary>
        internal static string @StandardMenuSearch => GetResourceString("StandardMenuSearch");
        /// <summary>Select &amp;All</summary>
        internal static string @StandardMenuSelectAll => GetResourceString("StandardMenuSelectAll");
        /// <summary>&amp;Tools</summary>
        internal static string @StandardMenuTools => GetResourceString("StandardMenuTools");
        /// <summary>&amp;Undo</summary>
        internal static string @StandardMenuUndo => GetResourceString("StandardMenuUndo");
        /// <summary>C&amp;ut</summary>
        internal static string @StandardToolCut => GetResourceString("StandardToolCut");
        /// <summary>Dock:</summary>
        internal static string @ToolStripActionList_Dock => GetResourceString("ToolStripActionList_Dock");
        /// <summary>Changes the Dock property</summary>
        internal static string @ToolStripActionList_DockDesc => GetResourceString("ToolStripActionList_DockDesc");
        /// <summary>GripStyle:</summary>
        internal static string @ToolStripActionList_GripStyle => GetResourceString("ToolStripActionList_GripStyle");
        /// <summary>Changes the GripStyle property</summary>
        internal static string @ToolStripActionList_GripStyleDesc => GetResourceString("ToolStripActionList_GripStyleDesc");
        /// <summary>Layout &amp;&amp; Appearance</summary>
        internal static string @ToolStripActionList_Layout => GetResourceString("ToolStripActionList_Layout");
        /// <summary>RenderMode:</summary>
        internal static string @ToolStripActionList_RenderMode => GetResourceString("ToolStripActionList_RenderMode");
        /// <summary>Changes the RenderMode property</summary>
        internal static string @ToolStripActionList_RenderModeDesc => GetResourceString("ToolStripActionList_RenderModeDesc");
        /// <summary>Adding {0} Item</summary>
        internal static string @ToolStripAddingItem => GetResourceString("ToolStripAddingItem");
        /// <summary>AllowItemReorder and AllowDrop cannot both be true.</summary>
        internal static string @ToolStripAllowItemReorderAndAllowDropCannotBeSetToTrue => GetResourceString("ToolStripAllowItemReorderAndAllowDropCannotBeSetToTrue");
        /// <summary>ToolStrip New Item create Transaction.</summary>
        internal static string @ToolStripCreatingNewItemTransaction => GetResourceString("ToolStripCreatingNewItemTransaction");
        /// <summary>Embed in ToolStripContainer</summary>
        internal static string @ToolStripDesignerEmbedVerb => GetResourceString("ToolStripDesignerEmbedVerb");
        /// <summary>Embeds the current ToolStrip in ToolStripContainer</summary>
        internal static string @ToolStripDesignerEmbedVerbDesc => GetResourceString("ToolStripDesignerEmbedVerbDesc");
        /// <summary>&amp;Insert Standard Items</summary>
        internal static string @ToolStripDesignerStandardItemsVerb => GetResourceString("ToolStripDesignerStandardItemsVerb");
        /// <summary>Inserts standard items in the current ToolStrip</summary>
        internal static string @ToolStripDesignerStandardItemsVerbDesc => GetResourceString("ToolStripDesignerStandardItemsVerbDesc");
        /// <summary>Type Here</summary>
        internal static string @ToolStripDesignerTemplateNodeEnterText => GetResourceString("ToolStripDesignerTemplateNodeEnterText");
        /// <summary>Type Text for ToolStripMenuItem</summary>
        internal static string @ToolStripDesignerTemplateNodeLabelToolTip => GetResourceString("ToolStripDesignerTemplateNodeLabelToolTip");
        /// <summary>Add Menu Item</summary>
        internal static string @ToolStripDesignerTemplateNodeSplitButtonStatusStripAccessibleName => GetResourceString("ToolStripDesignerTemplateNodeSplitButtonStatusStripAccessibleName");
        /// <summary>Add ToolStripStatusLabel</summary>
        internal static string @ToolStripDesignerTemplateNodeSplitButtonStatusStripToolTip => GetResourceString("ToolStripDesignerTemplateNodeSplitButtonStatusStripToolTip");
        /// <summary>Add ToolStripButton</summary>
        internal static string @ToolStripDesignerTemplateNodeSplitButtonToolTip => GetResourceString("ToolStripDesignerTemplateNodeSplitButtonToolTip");
        /// <summary>New item selection</summary>
        internal static string @ToolStripDesignerToolStripAccessibleName => GetResourceString("ToolStripDesignerToolStripAccessibleName");
        /// <summary>Removing Item</summary>
        internal static string @ToolStripDesignerTransactionRemovingItem => GetResourceString("ToolStripDesignerTransactionRemovingItem");
        /// <summary>ToolStrip MenuItem Insert in DropDown Transaction.</summary>
        internal static string @ToolStripInsertingIntoDropDownTransaction => GetResourceString("ToolStripInsertingIntoDropDownTransaction");
        /// <summary>&amp;Edit Items...</summary>
        internal static string @ToolStripItemCollectionEditorVerb => GetResourceString("ToolStripItemCollectionEditorVerb");
        /// <summary>&amp;Insert</summary>
        internal static string @ToolStripItemContextMenuInsert => GetResourceString("ToolStripItemContextMenuInsert");
        /// <summary>ToolStripItem Property Change Transaction.</summary>
        internal static string @ToolStripItemPropertyChangeTransaction => GetResourceString("ToolStripItemPropertyChangeTransaction");
        /// <summary>ToolStripItem Morphing Transaction.</summary>
        internal static string @ToolStripMorphingItemTransaction => GetResourceString("ToolStripMorphingItemTransaction");
        /// <summary>Cannot add ToolStripSeparator to MenuStrip.</summary>
        internal static string @ToolStripSeparatorError => GetResourceString("ToolStripSeparatorError");
        /// <summary>Type '{0}' is not available in the target framework.</summary>
        internal static string @TypeNotFoundInTargetFramework => GetResourceString("TypeNotFoundInTargetFramework");
        /// <summary>ShowCheckMargin</summary>
        internal static string @ContextMenuStripActionList_ShowCheckMargin => GetResourceString("ContextMenuStripActionList_ShowCheckMargin");
        /// <summary>Toggles the ShowCheckMargin property</summary>
        internal static string @ContextMenuStripActionList_ShowCheckMarginDesc => GetResourceString("ContextMenuStripActionList_ShowCheckMarginDesc");
        /// <summary>ShowImageMargin</summary>
        internal static string @ContextMenuStripActionList_ShowImageMargin => GetResourceString("ContextMenuStripActionList_ShowImageMargin");
        /// <summary>Toggles the ShowImageMargin property</summary>
        internal static string @ContextMenuStripActionList_ShowImageMarginDesc => GetResourceString("ContextMenuStripActionList_ShowImageMarginDesc");
        /// <summary>Duplicate declaration of member '{0}'</summary>
        internal static string @SerializationManagerDuplicateComponentDecl => GetResourceString("SerializationManagerDuplicateComponentDecl");
        /// <summary>The name '{0}' is already used by another object.</summary>
        internal static string @SerializationManagerNameInUse => GetResourceString("SerializationManagerNameInUse");
        /// <summary>Cannot name the object '{0}' because it is already named '{1}'.</summary>
        internal static string @SerializationManagerObjectHasName => GetResourceString("SerializationManagerObjectHasName");
        /// <summary>Elements of type {0} are not supported.  The serializer expects the element to be one of the following: {1}.</summary>
        internal static string @SerializerBadElementTypes => GetResourceString("SerializerBadElementTypes");
        /// <summary>Error reading resources from the resource file for the culture {0}: {1}</summary>
        internal static string @SerializerResourceException => GetResourceString("SerializerResourceException");
        /// <summary>Error reading resources from the resource file for the default culture: {0}</summary>
        internal static string @SerializerResourceExceptionInvariant => GetResourceString("SerializerResourceExceptionInvariant");
        /// <summary>Adding Item</summary>
        internal static string @ToolStripDesignerTransactionAddingItem => GetResourceString("ToolStripDesignerTransactionAddingItem");
        /// <summary>&amp;Edit DropDownItems...</summary>
        internal static string @ToolStripDropDownItemCollectionEditorVerb => GetResourceString("ToolStripDropDownItemCollectionEditorVerb");
        /// <summary>Con&amp;vert To</summary>
        internal static string @ToolStripItemContextMenuConvertTo => GetResourceString("ToolStripItemContextMenuConvertTo");
        /// <summary>The serialization store is closed.  New objects cannot be added to a closed store.</summary>
        internal static string @CodeDomComponentSerializationServiceClosedStore => GetResourceString("CodeDomComponentSerializationServiceClosedStore");
        /// <summary>Complete deserialization of {0} failed.</summary>
        internal static string @CodeDomComponentSerializationServiceDeserializationError => GetResourceString("CodeDomComponentSerializationServiceDeserializationError");
        /// <summary>This type of serialization store is not supported.  Use a store returned by the CreateStore method.</summary>
        internal static string @CodeDomComponentSerializationServiceUnknownStore => GetResourceString("CodeDomComponentSerializationServiceUnknownStore");
        /// <summary>Align To &amp;Grid</summary>
        internal static string @ContextMenuAlignToGrid => GetResourceString("ContextMenuAlignToGrid");
        /// <summary>&amp;Bring To Front</summary>
        internal static string @ContextMenuBringToFront => GetResourceString("ContextMenuBringToFront");
        /// <summary>C&amp;opy</summary>
        internal static string @ContextMenuCopy => GetResourceString("ContextMenuCopy");
        /// <summary>&amp;Cut</summary>
        internal static string @ContextMenuCut => GetResourceString("ContextMenuCut");
        /// <summary>&amp;Delete</summary>
        internal static string @ContextMenuDelete => GetResourceString("ContextMenuDelete");
        /// <summary>&amp;Document Outline</summary>
        internal static string @ContextMenuDocumentOutline => GetResourceString("ContextMenuDocumentOutline");
        /// <summary>&amp;Lock Controls</summary>
        internal static string @ContextMenuLockControls => GetResourceString("ContextMenuLockControls");
        /// <summary>&amp;Paste</summary>
        internal static string @ContextMenuPaste => GetResourceString("ContextMenuPaste");
        /// <summary>&amp;Properties</summary>
        internal static string @ContextMenuProperties => GetResourceString("ContextMenuProperties");
        /// <summary>&amp;Select</summary>
        internal static string @ContextMenuSelect => GetResourceString("ContextMenuSelect");
        /// <summary>&amp;Send To Back</summary>
        internal static string @ContextMenuSendToBack => GetResourceString("ContextMenuSendToBack");
        /// <summary>View &amp;Code</summary>
        internal static string @ContextMenuViewCode => GetResourceString("ContextMenuViewCode");
        /// <summary>You cannot create a new session because this serialization manager already has an active serialization session.</summary>
        internal static string @SerializationManagerAlreadyInSession => GetResourceString("SerializationManagerAlreadyInSession");
        /// <summary>Type '{0}' does not have a constructor with parameters of types {1}.</summary>
        internal static string @SerializationManagerNoMatchingCtor => GetResourceString("SerializationManagerNoMatchingCtor");
        /// <summary>This method cannot be invoked because the serialization manager does not have an active serialization session.</summary>
        internal static string @SerializationManagerNoSession => GetResourceString("SerializationManagerNoSession");
        /// <summary>This method cannot be invoked because the serialization manager has an active serialization session.</summary>
        internal static string @SerializationManagerWithinSession => GetResourceString("SerializationManagerWithinSession");
        /// <summary>Members of type '{0}' cannot be serialized.</summary>
        internal static string @SerializerMemberTypeNotSerializable => GetResourceString("SerializerMemberTypeNotSerializable");
        /// <summary>The designer must create an instance of type '{0}' but it cannot because the type is declared as abstract.</summary>
        internal static string @SerializerTypeAbstract => GetResourceString("SerializerTypeAbstract");
        /// <summary>He&amp;lp</summary>
        internal static string @StandardToolHelp => GetResourceString("StandardToolHelp");
        /// <summary>Set I&amp;mage...</summary>
        internal static string @ToolStripItemContextMenuSetImage => GetResourceString("ToolStripItemContextMenuSetImage");
        /// <summary>'{0}'</summary>
        internal static string @ToolStripSelectMenuItem => GetResourceString("ToolStripSelectMenuItem");
        /// <summary>Indicates if a member variable will be generated for this component.</summary>
        internal static string @CodeDomDesignerLoaderPropGenerateMember => GetResourceString("CodeDomDesignerLoaderPropGenerateMember");
        /// <summary>Indicates the visibility level of the object.</summary>
        internal static string @CodeDomDesignerLoaderPropModifiers => GetResourceString("CodeDomDesignerLoaderPropModifiers");
        /// <summary>You must close and re-open the designer for this change to take effect.</summary>
        internal static string @LocalizationProviderManualReload => GetResourceString("LocalizationProviderManualReload");
        /// <summary>The service {0} is required but could not be found.  If you have removed this service ensure that you provide a replacement.</summary>
        internal static string @LocalizationProviderMissingService => GetResourceString("LocalizationProviderMissingService");
        /// <summary>The designer loader has already been loaded from another host.  You can only have one designer loader for each host.</summary>
        internal static string @BasicDesignerLoaderDifferentHost => GetResourceString("BasicDesignerLoaderDifferentHost");
        /// <summary>The service {0} is required but could not be found.  If you have removed this service ensure that you provide a replacement.</summary>
        internal static string @BasicDesignerLoaderMissingService => GetResourceString("BasicDesignerLoaderMissingService");
        /// <summary>The designer loader has not been initialized yet.  You may only call this method after initialization.</summary>
        internal static string @BasicDesignerLoaderNotInitialized => GetResourceString("BasicDesignerLoaderNotInitialized");
        /// <summary>The designer is already loaded.</summary>
        internal static string @BasicDesignerLoaderAlreadyLoaded => GetResourceString("BasicDesignerLoaderAlreadyLoaded");
        /// <summary>The serialization data object is not of the proper type.</summary>
        internal static string @CodeDomDesignerLoaderBadSerializationObject => GetResourceString("CodeDomDesignerLoaderBadSerializationObject");
        /// <summary>{0} --- The designer for base class '{1}' is not installed.</summary>
        internal static string @CodeDomDesignerLoaderDocumentFailureTypeDesignerNotInstalled => GetResourceString("CodeDomDesignerLoaderDocumentFailureTypeDesignerNotInstalled");
        /// <summary>{0} --- The base class '{1}' cannot be designed.</summary>
        internal static string @CodeDomDesignerLoaderDocumentFailureTypeNotDesignable => GetResourceString("CodeDomDesignerLoaderDocumentFailureTypeNotDesignable");
        /// <summary>{0} --- The base class '{1}' could not be loaded.  Ensure the assembly has been referenced and that all projects have been built.</summary>
        internal static string @CodeDomDesignerLoaderDocumentFailureTypeNotFound => GetResourceString("CodeDomDesignerLoaderDocumentFailureTypeNotFound");
        /// <summary>There is already a component named '{0}'.  Components must have unique names, and names must be case-insensitive.  A name also cannot conflict with the name of any component in an inherited class.</summary>
        internal static string @CodeDomDesignerLoaderDupComponentName => GetResourceString("CodeDomDesignerLoaderDupComponentName");
        /// <summary>Empty identifiers are not valid.</summary>
        internal static string @CodeDomDesignerLoaderInvalidBlankIdentifier => GetResourceString("CodeDomDesignerLoaderInvalidBlankIdentifier");
        /// <summary>'{0}' is not a valid identifier.</summary>
        internal static string @CodeDomDesignerLoaderInvalidIdentifier => GetResourceString("CodeDomDesignerLoaderInvalidIdentifier");
        /// <summary>The language did not provide a code parser for this file.  Please make sure that this file type supports a designer.</summary>
        internal static string @CodeDomDesignerLoaderNoLanguageSupport => GetResourceString("CodeDomDesignerLoaderNoLanguageSupport");
        /// <summary>The designer could not be shown for this file because none of the classes within it can be designed.</summary>
        internal static string @CodeDomDesignerLoaderNoRootSerializer => GetResourceString("CodeDomDesignerLoaderNoRootSerializer");
        /// <summary>The designer could not be shown for this file because none of the classes within it can be designed.  The designer inspected the following classes in the file: 
        /// {0}</summary>
        internal static string @CodeDomDesignerLoaderNoRootSerializerWithFailures => GetResourceString("CodeDomDesignerLoaderNoRootSerializerWithFailures");
        /// <summary>The designer loader did not supply a type resolution service, which is a requirement for CodeDom serialization.</summary>
        internal static string @CodeDomDesignerLoaderNoTypeResolution => GetResourceString("CodeDomDesignerLoaderNoTypeResolution");
        /// <summary>The class {0} can be designed, but is not the first class in the file.  Visual Studio requires that designers use the first class in the file.  Move the class code so that it is the first class in the file and try loading the designer again.</summary>
        internal static string @CodeDomDesignerLoaderSerializerTypeNotFirstType => GetResourceString("CodeDomDesignerLoaderSerializerTypeNotFirstType");
        /// <summary>The event {0} expects an argument type of {1}.</summary>
        internal static string @EventBindingServiceBadArgType => GetResourceString("EventBindingServiceBadArgType");
        /// <summary>The event {0} is read-only and cannot be changed.</summary>
        internal static string @EventBindingServiceEventReadOnly => GetResourceString("EventBindingServiceEventReadOnly");
        /// <summary>The service {0} is required but could not be found.  If you have removed this service ensure that you provide a replacement.</summary>
        internal static string @EventBindingServiceMissingService => GetResourceString("EventBindingServiceMissingService");
        /// <summary>Events cannot be set on the object passed to the event binding service because a site associated with the object could not be located.</summary>
        internal static string @EventBindingServiceNoSite => GetResourceString("EventBindingServiceNoSite");
        /// <summary>Set {0}.{1} event</summary>
        internal static string @EventBindingServiceSetValue => GetResourceString("EventBindingServiceSetValue");
        /// <summary>All Files</summary>
        internal static string @BinaryEditorAllFiles => GetResourceString("BinaryEditorAllFiles");
        /// <summary>Error writing to file: {0}</summary>
        internal static string @BinaryEditorFileError => GetResourceString("BinaryEditorFileError");
        /// <summary>ByteArray</summary>
        internal static string @BinaryEditorFileName => GetResourceString("BinaryEditorFileName");
        /// <summary>Save File As</summary>
        internal static string @BinaryEditorSaveFile => GetResourceString("BinaryEditorSaveFile");
        /// <summary>Byte Array Property Editor</summary>
        internal static string @BinaryEditorTitle => GetResourceString("BinaryEditorTitle");
        /// <summary>One or more required properties are null or empty.</summary>
        internal static string @MaskDescriptorNullOrEmptyRequiredProperty => GetResourceString("MaskDescriptorNullOrEmptyRequiredProperty");
        /// <summary>The provided MaskDescriptor is null.</summary>
        internal static string @MaskDescriptorNull => GetResourceString("MaskDescriptorNull");
        /// <summary>Mask is not full.</summary>
        internal static string @MaskDescriptorNotMaskFullErrorMsg => GetResourceString("MaskDescriptorNotMaskFullErrorMsg");
        /// <summary>(none)</summary>
        internal static string @MaskDescriptorValidatingTypeNone => GetResourceString("MaskDescriptorValidatingTypeNone");
        /// <summary>&lt;Custom&gt;</summary>
        internal static string @MaskDesignerDialogCustomEntry => GetResourceString("MaskDesignerDialogCustomEntry");
        /// <summary>Data Format</summary>
        internal static string @MaskDesignerDialogDataFormat => GetResourceString("MaskDesignerDialogDataFormat");
        /// <summary>Input Mask</summary>
        internal static string @MaskDesignerDialogDlgCaption => GetResourceString("MaskDesignerDialogDlgCaption");
        /// <summary>Mask Description</summary>
        internal static string @MaskDesignerDialogMaskDescription => GetResourceString("MaskDesignerDialogMaskDescription");
        /// <summary>Validating Type</summary>
        internal static string @MaskDesignerDialogValidatingType => GetResourceString("MaskDesignerDialogValidatingType");
        /// <summary>Set Mask...</summary>
        internal static string @MaskedTextBoxDesignerVerbsSetMaskDesc => GetResourceString("MaskedTextBoxDesignerVerbsSetMaskDesc");
        /// <summary>Error at position {0}: {1}.</summary>
        internal static string @MaskedTextBoxTextEditorErrorFormatString => GetResourceString("MaskedTextBoxTextEditorErrorFormatString");
        /// <summary>ASCII character expected</summary>
        internal static string @MaskedTextBoxHintAsciiCharacterExpected => GetResourceString("MaskedTextBoxHintAsciiCharacterExpected");
        /// <summary>Alphanumeric character expected</summary>
        internal static string @MaskedTextBoxHintAlphanumericCharacterExpected => GetResourceString("MaskedTextBoxHintAlphanumericCharacterExpected");
        /// <summary>Digit expected</summary>
        internal static string @MaskedTextBoxHintDigitExpected => GetResourceString("MaskedTextBoxHintDigitExpected");
        /// <summary>Signed digit expected</summary>
        internal static string @MaskedTextBoxHintSignedDigitExpected => GetResourceString("MaskedTextBoxHintSignedDigitExpected");
        /// <summary>Letter expected</summary>
        internal static string @MaskedTextBoxHintLetterExpected => GetResourceString("MaskedTextBoxHintLetterExpected");
        /// <summary>Prompt character disallowed as input</summary>
        internal static string @MaskedTextBoxHintPromptCharNotAllowed => GetResourceString("MaskedTextBoxHintPromptCharNotAllowed");
        /// <summary>Unavailable edit position</summary>
        internal static string @MaskedTextBoxHintUnavailableEditPosition => GetResourceString("MaskedTextBoxHintUnavailableEditPosition");
        /// <summary>Non edit position</summary>
        internal static string @MaskedTextBoxHintNonEditPosition => GetResourceString("MaskedTextBoxHintNonEditPosition");
        /// <summary>Position out of range</summary>
        internal static string @MaskedTextBoxHintPositionOutOfRange => GetResourceString("MaskedTextBoxHintPositionOutOfRange");
        /// <summary>Invalid input character</summary>
        internal static string @MaskedTextBoxHintInvalidInput => GetResourceString("MaskedTextBoxHintInvalidInput");
        /// <summary>There is already a command handler for the menu command '{0}'.</summary>
        internal static string @MenuCommandService_DuplicateCommand => GetResourceString("MenuCommandService_DuplicateCommand");
        /// <summary>Anchor Editor</summary>
        internal static string @AnchorEditorAccName => GetResourceString("AnchorEditorAccName");
        /// <summary>Bottom</summary>
        internal static string @AnchorEditorBottomAccName => GetResourceString("AnchorEditorBottomAccName");
        /// <summary>Left</summary>
        internal static string @AnchorEditorLeftAccName => GetResourceString("AnchorEditorLeftAccName");
        /// <summary>Right</summary>
        internal static string @AnchorEditorRightAccName => GetResourceString("AnchorEditorRightAccName");
        /// <summary>Top</summary>
        internal static string @AnchorEditorTopAccName => GetResourceString("AnchorEditorTopAccName");
        /// <summary>Bitmap files</summary>
        internal static string @bitmapFileDescription => GetResourceString("bitmapFileDescription");
        /// <summary>Color Picker</summary>
        internal static string @ColorEditorAccName => GetResourceString("ColorEditorAccName");
        /// <summary>Custom</summary>
        internal static string @ColorEditorPaletteTab => GetResourceString("ColorEditorPaletteTab");
        /// <summary>Web</summary>
        internal static string @ColorEditorStandardTab => GetResourceString("ColorEditorStandardTab");
        /// <summary>System</summary>
        internal static string @ColorEditorSystemTab => GetResourceString("ColorEditorSystemTab");
        /// <summary>Items collection cannot be modified when the DataSource property is set.</summary>
        internal static string @DataSourceLocksItems => GetResourceString("DataSourceLocksItems");
        /// <summary>Dock Picker</summary>
        internal static string @DockEditorAccName => GetResourceString("DockEditorAccName");
        /// <summary>Bottom</summary>
        internal static string @DockEditorBottomAccName => GetResourceString("DockEditorBottomAccName");
        /// <summary>Fill</summary>
        internal static string @DockEditorFillAccName => GetResourceString("DockEditorFillAccName");
        /// <summary>Left</summary>
        internal static string @DockEditorLeftAccName => GetResourceString("DockEditorLeftAccName");
        /// <summary>None</summary>
        internal static string @DockEditorNoneAccName => GetResourceString("DockEditorNoneAccName");
        /// <summary>Right</summary>
        internal static string @DockEditorRightAccName => GetResourceString("DockEditorRightAccName");
        /// <summary>Top</summary>
        internal static string @DockEditorTopAccName => GetResourceString("DockEditorTopAccName");
        /// <summary>All Files(*.*)|*.*</summary>
        internal static string @GenericFileFilter => GetResourceString("GenericFileFilter");
        /// <summary>Open File</summary>
        internal static string @GenericOpenFile => GetResourceString("GenericOpenFile");
        /// <summary>All image files</summary>
        internal static string @imageFileDescription => GetResourceString("imageFileDescription");
        /// <summary>ListViewSubItem</summary>
        internal static string @ListViewSubItemBaseName => GetResourceString("ListViewSubItemBaseName");
        /// <summary>Metafiles</summary>
        internal static string @metafileFileDescription => GetResourceString("metafileFileDescription");
        /// <summary>(Unknown)</summary>
        internal static string @ShortcutKeys_InvalidKey => GetResourceString("ShortcutKeys_InvalidKey");
        /// <summary>The item '{0}' cannot be removed.</summary>
        internal static string @CollectionEditorCantRemoveItem => GetResourceString("CollectionEditorCantRemoveItem");
        /// <summary>{0} Collection Editor</summary>
        internal static string @CollectionEditorCaption => GetResourceString("CollectionEditorCaption");
        /// <summary>Read-only component(s) selected.</summary>
        internal static string @CollectionEditorInheritedReadOnlySelection => GetResourceString("CollectionEditorInheritedReadOnlySelection");
        /// <summary>{0} &amp;properties:</summary>
        internal static string @CollectionEditorProperties => GetResourceString("CollectionEditorProperties");
        /// <summary>Multi-Select &amp;Properties:</summary>
        internal static string @CollectionEditorPropertiesMultiSelect => GetResourceString("CollectionEditorPropertiesMultiSelect");
        /// <summary>&amp;Properties:</summary>
        internal static string @CollectionEditorPropertiesNone => GetResourceString("CollectionEditorPropertiesNone");
        /// <summary>Add or remove {0} objects</summary>
        internal static string @CollectionEditorUndoBatchDesc => GetResourceString("CollectionEditorUndoBatchDesc");
        /// <summary>Press Enter to begin a new line.
        /// Press Ctrl+Enter to accept Text.</summary>
        internal static string @MultilineStringEditorWatermark => GetResourceString("MultilineStringEditorWatermark");
        /// <summary>Images Collection Editor</summary>
        internal static string @ImageCollectionEditorFormText => GetResourceString("ImageCollectionEditorFormText");
        /// <summary>Alignment Picker</summary>
        internal static string @ContentAlignmentEditorAccName => GetResourceString("ContentAlignmentEditorAccName");
        /// <summary>Bottom Middle</summary>
        internal static string @ContentAlignmentEditorBottomCenterAccName => GetResourceString("ContentAlignmentEditorBottomCenterAccName");
        /// <summary>Bottom Left</summary>
        internal static string @ContentAlignmentEditorBottomLeftAccName => GetResourceString("ContentAlignmentEditorBottomLeftAccName");
        /// <summary>Bottom Right</summary>
        internal static string @ContentAlignmentEditorBottomRightAccName => GetResourceString("ContentAlignmentEditorBottomRightAccName");
        /// <summary>Middle Center</summary>
        internal static string @ContentAlignmentEditorMiddleCenterAccName => GetResourceString("ContentAlignmentEditorMiddleCenterAccName");
        /// <summary>Middle Left</summary>
        internal static string @ContentAlignmentEditorMiddleLeftAccName => GetResourceString("ContentAlignmentEditorMiddleLeftAccName");
        /// <summary>Middle Right</summary>
        internal static string @ContentAlignmentEditorMiddleRightAccName => GetResourceString("ContentAlignmentEditorMiddleRightAccName");
        /// <summary>Top Center</summary>
        internal static string @ContentAlignmentEditorTopCenterAccName => GetResourceString("ContentAlignmentEditorTopCenterAccName");
        /// <summary>Top Left</summary>
        internal static string @ContentAlignmentEditorTopLeftAccName => GetResourceString("ContentAlignmentEditorTopLeftAccName");
        /// <summary>Top Right</summary>
        internal static string @ContentAlignmentEditorTopRightAccName => GetResourceString("ContentAlignmentEditorTopRightAccName");
        /// <summary>Cancel</summary>
        internal static string @LinkAreaEditorCancel => GetResourceString("LinkAreaEditorCancel");
        /// <summary>LinkArea Editor</summary>
        internal static string @LinkAreaEditorCaption => GetResourceString("LinkAreaEditorCaption");
        /// <summary>Select a &amp;range of text to make your link:</summary>
        internal static string @LinkAreaEditorDescription => GetResourceString("LinkAreaEditorDescription");
        /// <summary>OK</summary>
        internal static string @LinkAreaEditorOK => GetResourceString("LinkAreaEditorOK");
        /// <summary>Icon files</summary>
        internal static string @iconFileDescription => GetResourceString("iconFileDescription");
        /// <summary>Select the path to the folder that will initially be selected in the FolderBrowserDialog.</summary>
        internal static string @SelectedPathEditorLabel => GetResourceString("SelectedPathEditorLabel");
        /// <summary>Custo&amp;m format</summary>
        internal static string @BindingFormattingDialogCustomFormat => GetResourceString("BindingFormattingDialogCustomFormat");
        /// <summary>Custom format</summary>
        internal static string @BindingFormattingDialogCustomFormatAccessibleDescription => GetResourceString("BindingFormattingDialogCustomFormatAccessibleDescription");
        /// <summary>&amp;Decimal places</summary>
        internal static string @BindingFormattingDialogDecimalPlaces => GetResourceString("BindingFormattingDialogDecimalPlaces");
        /// <summary>Currency</summary>
        internal static string @BindingFormattingDialogFormatTypeCurrency => GetResourceString("BindingFormattingDialogFormatTypeCurrency");
        /// <summary>Specify the format for monetary values.</summary>
        internal static string @BindingFormattingDialogFormatTypeCurrencyExplanation => GetResourceString("BindingFormattingDialogFormatTypeCurrencyExplanation");
        /// <summary>Custom</summary>
        internal static string @BindingFormattingDialogFormatTypeCustom => GetResourceString("BindingFormattingDialogFormatTypeCustom");
        /// <summary>Type a custom format string. A custom string may require extra handling unless it is a read-only value.</summary>
        internal static string @BindingFormattingDialogFormatTypeCustomExplanation => GetResourceString("BindingFormattingDialogFormatTypeCustomExplanation");
        /// <summary>Invalid format</summary>
        internal static string @BindingFormattingDialogFormatTypeCustomInvalidFormat => GetResourceString("BindingFormattingDialogFormatTypeCustomInvalidFormat");
        /// <summary>Date Time</summary>
        internal static string @BindingFormattingDialogFormatTypeDateTime => GetResourceString("BindingFormattingDialogFormatTypeDateTime");
        /// <summary>Specify the format for date and time values.</summary>
        internal static string @BindingFormattingDialogFormatTypeDateTimeExplanation => GetResourceString("BindingFormattingDialogFormatTypeDateTimeExplanation");
        /// <summary>No Formatting</summary>
        internal static string @BindingFormattingDialogFormatTypeNoFormatting => GetResourceString("BindingFormattingDialogFormatTypeNoFormatting");
        /// <summary>Use no formatting to display the value from the source without adornment.</summary>
        internal static string @BindingFormattingDialogFormatTypeNoFormattingExplanation => GetResourceString("BindingFormattingDialogFormatTypeNoFormattingExplanation");
        /// <summary>Numeric</summary>
        internal static string @BindingFormattingDialogFormatTypeNumeric => GetResourceString("BindingFormattingDialogFormatTypeNumeric");
        /// <summary>Specify the format for numbers. Note that the Currency format type offers specialized formatting for monetary values.</summary>
        internal static string @BindingFormattingDialogFormatTypeNumericExplanation => GetResourceString("BindingFormattingDialogFormatTypeNumericExplanation");
        /// <summary>Scientific</summary>
        internal static string @BindingFormattingDialogFormatTypeScientific => GetResourceString("BindingFormattingDialogFormatTypeScientific");
        /// <summary>Specify the format for values that use scientific notation.</summary>
        internal static string @BindingFormattingDialogFormatTypeScientificExplanation => GetResourceString("BindingFormattingDialogFormatTypeScientificExplanation");
        /// <summary>&amp;Null value:</summary>
        internal static string @BindingFormattingDialogNullValue => GetResourceString("BindingFormattingDialogNullValue");
        /// <summary>&amp;Type</summary>
        internal static string @BindingFormattingDialogType => GetResourceString("BindingFormattingDialogType");
        /// <summary>Cancel</summary>
        internal static string @DataGridView_Cancel => GetResourceString("DataGridView_Cancel");
        /// <summary>OK</summary>
        internal static string @DataGridView_OK => GetResourceString("DataGridView_OK");
        /// <summary>Format String Dialog</summary>
        internal static string @FormatStringDialogTitle => GetResourceString("FormatStringDialogTitle");
        /// <summary>All Help Files(*.chm,*.col,*.htm,*.html)|*.chm;*.col;*.htm;*.html|Compressed HTML Files(*.chm)|*.chm|Help Collection Files(*.col)|*.col|HTML Files(*.htm,*.html)|*.htm;*.html|All Files(*.*)|*.*</summary>
        internal static string @HelpProviderEditorFilter => GetResourceString("HelpProviderEditorFilter");
        /// <summary>Open Help File</summary>
        internal static string @HelpProviderEditorTitle => GetResourceString("HelpProviderEditorTitle");
        /// <summary>Normal Preview</summary>
        internal static string @CellStyleBuilderNormalPreviewAccName => GetResourceString("CellStyleBuilderNormalPreviewAccName");
        /// <summary>Selected Preview</summary>
        internal static string @CellStyleBuilderSelectedPreviewAccName => GetResourceString("CellStyleBuilderSelectedPreviewAccName");
        /// <summary>Select the directory that will initially be opened in the dialog.</summary>
        internal static string @InitialDirectoryEditorLabel => GetResourceString("InitialDirectoryEditorLabel");
        /// <summary>ActiveX Control</summary>
        internal static string @Ax_Control => GetResourceString("Ax_Control");
        /// <summary>Failed to import the ActiveX control.  Please ensure it is properly registered.</summary>
        internal static string @AxImportFailed => GetResourceString("AxImportFailed");
        /// <summary>Could not create ActiveX control '{0}' because it is not properly registered.</summary>
        internal static string @AXNotRegistered => GetResourceString("AXNotRegistered");
        /// <summary>Select the image displayed in the PictureBox</summary>
        internal static string @ChooseImageDescription => GetResourceString("ChooseImageDescription");
        /// <summary>Choose Image...</summary>
        internal static string @ChooseImageDisplayName => GetResourceString("ChooseImageDisplayName");
        /// <summary>Requested Clipboard operation did not succeed.</summary>
        internal static string @ClipboardError => GetResourceString("ClipboardError");
        /// <summary>Bring {0} controls to front</summary>
        internal static string @CommandSetBringToFront => GetResourceString("CommandSetBringToFront");
        /// <summary>Lock {0} components</summary>
        internal static string @CommandSetLockControls => GetResourceString("CommandSetLockControls");
        /// <summary>Send {0} controls to back</summary>
        internal static string @CommandSetSendToBack => GetResourceString("CommandSetSendToBack");
        /// <summary>Creating components in tool '{0}'</summary>
        internal static string @DesignerBatchCreateTool => GetResourceString("DesignerBatchCreateTool");
        /// <summary>Indicates the name used in code to identify the object.</summary>
        internal static string @DesignerPropName => GetResourceString("DesignerPropName");
        /// <summary>Cannot add component of type '{0}' to container of type '{1}'</summary>
        internal static string @DesignerCantParentType => GetResourceString("DesignerCantParentType");
        /// <summary>Drop components</summary>
        internal static string @DragDropDropComponents => GetResourceString("DragDropDropComponents");
        /// <summary>Opens the Lines collection editor</summary>
        internal static string @EditLinesDescription => GetResourceString("EditLinesDescription");
        /// <summary>Edit Text Lines...</summary>
        internal static string @EditLinesDisplayName => GetResourceString("EditLinesDisplayName");
        /// <summary>Failed to create component '{0}'.  The error message follows:\r\n '{1}'</summary>
        internal static string @FailedToCreateComponent => GetResourceString("FailedToCreateComponent");
        /// <summary>ImageList:</summary>
        internal static string @ImageListDisplayName => GetResourceString("ImageListDisplayName");
        /// <summary>Chooses an ImageList to use with this TreeView</summary>
        internal static string @ImageListDescription => GetResourceString("ImageListDescription");
        /// <summary>Edit Nodes...</summary>
        internal static string @InvokeNodesDialogDisplayName => GetResourceString("InvokeNodesDialogDisplayName");
        /// <summary>Opens the Nodes collection editor</summary>
        internal static string @InvokeNodesDialogDescription => GetResourceString("InvokeNodesDialogDescription");
        /// <summary>Items</summary>
        internal static string @ItemsCategoryName => GetResourceString("ItemsCategoryName");
        /// <summary>Links</summary>
        internal static string @LinksCategoryName => GetResourceString("LinksCategoryName");
        /// <summary>Opens the Items collection editor</summary>
        internal static string @ListViewActionListEditItemsDescription => GetResourceString("ListViewActionListEditItemsDescription");
        /// <summary>Edit Items...</summary>
        internal static string @ListViewActionListEditItemsDisplayName => GetResourceString("ListViewActionListEditItemsDisplayName");
        /// <summary>Edit Columns...</summary>
        internal static string @ListViewActionListEditColumnsDisplayName => GetResourceString("ListViewActionListEditColumnsDisplayName");
        /// <summary>Opens the Columns collection editor</summary>
        internal static string @ListViewActionListEditColumnsDescription => GetResourceString("ListViewActionListEditColumnsDescription");
        /// <summary>Edit Groups...</summary>
        internal static string @ListViewActionListEditGroupsDisplayName => GetResourceString("ListViewActionListEditGroupsDisplayName");
        /// <summary>Opens the Groups collection editor</summary>
        internal static string @ListViewActionListEditGroupsDescription => GetResourceString("ListViewActionListEditGroupsDescription");
        /// <summary>View:</summary>
        internal static string @ListViewActionListViewDisplayName => GetResourceString("ListViewActionListViewDisplayName");
        /// <summary>Changes the type of View this ListView shows</summary>
        internal static string @ListViewActionListViewDescription => GetResourceString("ListViewActionListViewDescription");
        /// <summary>Small ImageList:</summary>
        internal static string @ListViewActionListSmallImagesDisplayName => GetResourceString("ListViewActionListSmallImagesDisplayName");
        /// <summary>Selects an ImageList to use with SmallIcon mode</summary>
        internal static string @ListViewActionListSmallImagesDescription => GetResourceString("ListViewActionListSmallImagesDescription");
        /// <summary>Large ImageList:</summary>
        internal static string @ListViewActionListLargeImagesDisplayName => GetResourceString("ListViewActionListLargeImagesDisplayName");
        /// <summary>Selects an ImageList to use with LargeIcon mode</summary>
        internal static string @ListViewActionListLargeImagesDescription => GetResourceString("ListViewActionListLargeImagesDescription");
        /// <summary>Edit Items...</summary>
        internal static string @ListControlUnboundActionListEditItemsDisplayName => GetResourceString("ListControlUnboundActionListEditItemsDisplayName");
        /// <summary>Opens the Items collection editor</summary>
        internal static string @ListControlUnboundActionListEditItemsDescription => GetResourceString("ListControlUnboundActionListEditItemsDescription");
        /// <summary>Components cannot be added in localization mode.  Select (Default) in the Language property to return to the default form and add components.</summary>
        internal static string @LocalizingCannotAdd => GetResourceString("LocalizingCannotAdd");
        /// <summary>Puts the TextBox in a mode where it can display multiple lines of text</summary>
        internal static string @MultiLineDescription => GetResourceString("MultiLineDescription");
        /// <summary>MultiLine</summary>
        internal static string @MultiLineDisplayName => GetResourceString("MultiLineDisplayName");
        /// <summary>Determines the size of the positioning grid.</summary>
        internal static string @ParentControlDesignerGridSizeDescr => GetResourceString("ParentControlDesignerGridSizeDescr");
        /// <summary>Place existing controls in new container, '{0}'.</summary>
        internal static string @ParentControlDesignerLassoShortcutRedo => GetResourceString("ParentControlDesignerLassoShortcutRedo");
        /// <summary>Properties</summary>
        internal static string @PropertiesCategoryName => GetResourceString("PropertiesCategoryName");
        /// <summary>Changes the sizing mode of the Image displayed in the PictureBox</summary>
        internal static string @SizeModeDescription => GetResourceString("SizeModeDescription");
        /// <summary>Size Mode:</summary>
        internal static string @SizeModeDisplayName => GetResourceString("SizeModeDisplayName");
        /// <summary>- Read Only</summary>
        internal static string @WindowsFormsTabOrderReadOnly => GetResourceString("WindowsFormsTabOrderReadOnly");
        /// <summary>Check</summary>
        internal static string @AccessibleActionCheck => GetResourceString("AccessibleActionCheck");
        /// <summary>Uncheck</summary>
        internal static string @AccessibleActionUncheck => GetResourceString("AccessibleActionUncheck");

    }
}
